TODO - functionalitati aplicatie

Large Fibonacci numbers with Matrix Exponentiation

1. Stress Test
        fibonacci?
        Ruleaza workload-ul o perioada de timp pentru a testa stabilitatea
        Rezultat gresit -> fail? <=> sistemul nu este stabil
                                (trebuie implementarea sa fie 100% accurate)

2. Benchmark
        Cauta un anumit numar

        cel mai basic metric -> TIMP --- cat dureaza pana gaseste numarul respectiv

--DEBUG--

3. SysInfo
        Printeaza informatii despre sistem -> CPU model, family, etc
                                              temperaturi, usage, etc

4. Debug (Stress Test + Debug sau Benchmark + Debug)
    4.1. Simple Debug
            Pe langa progress bar / whatever -> print sysinfo
                                                relevant: CPU temp + usage

    4.2. Full Debug
        4.2.1. Stress Test with Full Debugging
                    print toate numerele calculate si sa afiseze ca sunt ok
                    daca apare un numar gresit -> vedem numarul si apare fail si se opreste aplicatia

        4.2.2. Benchmark with Full Debugging
                    la fel ca la stress test



---
TREBUIE UN FAILSAFE PT A VERIFICA CA NUMERELE REZULTATE CHIAR SUNT CORECTE





-----

Fibonacci for large numbers
Miller-Rabin algorithm
FFT

(integrate FFT into Miller-Rabin ???)


OpenMP

Split workload evenly between cores -> performance scales with more cores




-----

Comparam cu alte tooluri: prime95, aida64, linpack, etc

de ce e mai bun? -> timp pana gaseste instabilitate (crash) -- PENTRU STRESS TEST


--

stress test -> continuously compute Fibonacci numbers
benchmark -> find first Fibonacci number with 1000 digits

fibonacci number == 5x^2 + 4 sau 5x^2 - 4 = perfect square

workload pt benchmark ->    compute numbers from ?? 1000 to 10000
